# manual (alias)
# set = set-option
# setw = set-window-option = set-option -w
# bind = bind-key
# unbind = unbind-key

# List of plugins
set -g @plugin 'tmux-plugins/tpm' #tmuxプラグインマネージャ(tmux-sensibleに依存)
set -g @plugin 'tmux-plugins/tmux-sensible' #tmuxプラグインマネージャ
set -g @plugin 'tmux-plugins/tmux-resurrect' #セッションのセーブ/ロード
# set -g @plugin 'tmux-plugins/tmux-continuum' #セッションの自動セーブ/ロード(tmux-resurrectに依存)
# set -g @plugin 'tmux-plugins/tmux-urlview' #ドキュメント内のURLを選択してブラウザで開く。

## command 
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf."

# option
## character
#setw -g utf8 on
#setw -g status-utf8 on
## index
set -g base-index 1
setw -g pane-base-index 1
## mouse
set -g mouse off
## miscellaneous
set -s set-clipboard off # terminal clipboard content using xterm escape sequence
set -sg escape-time 1 # (milliseconds)

# keybindings
## prefix
set -g prefix C-s
unbind -n C-a
## new window
bind c new-window -c '#{pane_current_path}'
## split a pane
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
## move to a pane
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind h if-shell "$is_vim" "send-keys S-Left" "select-pane -L"
bind j if-shell "$is_vim" "send-keys S-Down" "select-pane -D"
bind k if-shell "$is_vim" "send-keys S-Up" "select-pane -U"
bind l if-shell "$is_vim" "send-keys S-Right" "select-pane -R"
bind C-h if-shell "$is_vim" "send-keys S-Left" "select-pane -L"
bind C-j if-shell "$is_vim" "send-keys S-Down" "select-pane -D"
bind C-k if-shell "$is_vim" "send-keys S-Up" "select-pane -U"
bind C-l if-shell "$is_vim" "send-keys S-Right" "select-pane -R"
bind -nr S-Left if-shell "$is_vim" "send-keys S-Left" "select-pane -L"
bind -nr S-Down if-shell "$is_vim" "send-keys S-Down" "select-pane -D"
bind -nr S-Up if-shell "$is_vim" "send-keys S-Up" "select-pane -U"
bind -nr S-Right if-shell "$is_vim" "send-keys S-Right" "select-pane -R"
## resize a pane
# resize of tmux preferentially
bind -r H resize-pane -L 2 
bind -r J resize-pane -D 2 
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
# the following keybindings are no effect in a vim of being single window.
bind -nr M-S-Left if-shell "$is_vim" "send-keys M-S-Left" "resize-pane -L 2"
bind -nr M-S-Down if-shell "$is_vim" "send-keys M-S-Down" "resize-pane -D 2"
bind -nr M-S-Up if-shell "$is_vim" "send-keys M-S-Up" "resize-pane -U 2"
bind -nr M-S-Right if-shell "$is_vim" "send-keys M-S-Right" "resize-pane -R 2"
## copy mode
setw -g mode-keys vi
bind p run "xsel -ob | tmux load-buffer - ; tmux paste-buffer"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ib"
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ib"
bind -T copy-mode-vi Y send-keys -X copy-line

# appearance
## set terminal color
set -g default-terminal "screen-256color"
## pane color
set -g status-style fg=white,bg=black
set -g message-style fg='white',bg='black',bright
set -g pane-border-style fg='green',bg='black'
set -g pane-active-border-style fg='white',bg='yellow'
## status bar
set -g status-position top
set -g status-left-length 40
set -g status-left "#[fg=cyan]session:#S #[fg=green]win:#I #[fg=yellow]pane:#P "
set -g status-right "#[fg=white][%F(%a) %T]"
set -g status-justify centre

# tmux-continuum
# set -g @continuum-boot 'off' 
# set -g @continuum-restore 'off' #最終1分の更新が無視されて復帰するため閉じたプログラムが再起動されてしまう。
# set -g @continuum-save-interval '0'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

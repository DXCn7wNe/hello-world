# === toml
[[plugins]] # toml用シンタックスファイル
repo = 'cespare/vim-toml' 
on_ft = 'toml'

# === python
[[plugins]] # ipython連携
repo = 'bfredl/nvim-ipy'
on_ft = 'python'
hook_add = '''
    nmap <silent> <C-F5> <Plug>(IPy-RunCell)
    nmap <silent> <C-S-F5> <Plug>(IPy-RunAll)
    nmap <silent> <M-S-F5> <Plug>(IPy-Terminate)
    " quickrunと被るため大文字に変更
    " let g:jedi#rename_command = '<Leader>R'
'''

[[plugins]] # python入力支援
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_source = '''
    autocmd FileType python setlocal completeopt-=preview "補完時にサブウィンドウを開かない。
    let g:jedi#popup_on_dot = 0
    let g:jedi#popup_select_first = 0
'''

# === clang
[[plugins]] # C/C++/Obj-C/JAVA/Javascriptなどの整形ツール
repo = 'rhysd/vim-clang-format' 
on_ft = ['c', 'cpp']

# === openfoam
[[plugins]] # OpenFOAM用のシンタックスファイル
repo = 'effi/vim-OpenFoam-syntax'
# repo = 'lervag/vim-foam'

# === gmsh
[[plugins]] # gmsh用のシンタックスファイル
repo = 'vim-scripts/gmsh.vim' 
on_ft = 'gmsh'
hook_add = '''
    augroup filetypedetect 
    au BufNewFile,BufRead *.geo setf gmsh 
    augroup END 
'''

# === elmer
[[plugins]] # elmer用のシンタックスファイル
repo = 'ettaka/vim-elmer' 
on_ft = 'sif'
hook_add = '''
    augroup filetypedetect 
    au BufNewFile,BufRead *.sif setf sif
    augroup END 
'''

# === freefem
[[plugins]] # freefem用のシンタックスファイル
repo = 'vim-scripts/freefem.vim' 
on_ft = 'edp'
hook_add = '''
    augroup filetypedetect 
    au BufNewFile,BufRead *.edp setf edp
    augroup END 
'''

# === markdown
[[plugins]] # markdown入力支援
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'
hook_source = '''
    let g:vim_markdown_folding_disabled = 1
    let g:vim_markdown_toc_autofit = 1
    let g:vim_markdown_auto_insert_bullets = 0
'''

[[plugins]] # markdownをブラウザでプレビューする。
repo = 'kannokanno/previm'
on_ft = 'markdown'

[[plugins]] # previmでデフォルトのブラウザを開く
repo = 'tyru/open-browser.vim'

# === arduino
[[plugins]] # arduino用のsyntax
repo = 'sudar/vim-arduino-syntax'

[[plugins]] # arduino ideとの連携
repo = 'stevearc/vim-arduino'
hook_source = '''
    let g:arduino_cmd = "~/archive/arduino/arduino-nightly/arduino"
    let g:arduino_serial_cmd = 'picocom {port} -b {baud} -l'
    let g:arduino_auto_baud = 1
'''
hook_post_source = '''
    function! ArduinoStatus()
    if &filetype !=# 'arduino'
        return ''
    endif
    let port = arduino#GetPort()
    let line = split(g:arduino_board, ':')[2] . '/' . split(g:arduino_programmer, ':')[1]
    if !empty(port)
        let line = line . '/' . port . '/' . g:arduino_serial_baud
    endif
    return line
    endfunction
'''

# === color
[[plugins]] # colorschemeのスライドショー
repo = 'felixhummel/setcolors.vim'

